<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

const int N = 5;                  // number of forks / philosophers

chan get[N], put[N];

int sit = 0;</declaration>
	<template>
		<name>Phil</name>
		<parameter>int i</parameter>
		<declaration>int presence;</declaration>
		<location id="id0" x="-204" y="0">
			<name x="-272" y="-8">Waiting</name>
		</location>
		<location id="id1" x="-68" y="-8">
		</location>
		<location id="id2" x="68" y="0">
		</location>
		<location id="id3" x="68" y="68">
		</location>
		<location id="id4" x="-68" y="76">
		</location>
		<location id="id5" x="-204" y="68">
		</location>
		<location id="id6" x="-136" y="-34">
			<name x="-161" y="-68">Table</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id6"/>
			<label kind="guard" x="-280" y="-51">presence == 1</label>
			<nail x="-187" y="-34"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id0"/>
			<label kind="assignment" x="-391" y="25">sit = sit - 1, presence = 0</label>
			<nail x="-229" y="34"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-110" y="-59">get[i]!</label>
			<nail x="-85" y="-34"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id6"/>
			<label kind="guard" x="-187" y="-8">sit &lt;= 3</label>
			<label kind="assignment" x="-187" y="9">sit = sit+1, presence = 1</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="comments" x="119" y="25">Eat</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id0"/>
			<label kind="comments" x="-195" y="34">Think</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-110" y="110">put[i]!</label>
			<nail x="-85" y="102"/>
			<nail x="-178" y="102"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-8" y="110">put[(i+1)%N]!</label>
			<nail x="34" y="102"/>
			<nail x="-42" y="102"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-8" y="-59">get[(i+1)%N]!</label>
			<nail x="-42" y="-34"/>
			<nail x="34" y="-34"/>
		</transition>
	</template>
	<template>
		<name>Fork</name>
		<parameter>int i</parameter>
		<location id="id7" x="-136" y="0">
		</location>
		<location id="id8" x="0" y="0">
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-85" y="42">put[i]?</label>
			<nail x="-34" y="34"/>
			<nail x="-102" y="34"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-85" y="-59">get[i]?</label>
			<nail x="-102" y="-34"/>
			<nail x="-34" y="-34"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

F0 = Fork(0);
F1 = Fork(1);
F2 = Fork(2);
F3 = Fork(3);
F4 = Fork(4);

P0 = Phil(0);
P1 = Phil(1);
P2 = Phil(2);
P3 = Phil(3);
P4 = Phil(4);

// List one or more processes to be composed into a system.
system F0, F1, F2, F3, F4, P0, P1, P2, P3, P4;
</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
